<UserControl x:Class="MyWpf.Skin"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyWpf"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converter="clr-namespace:MyWpf.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Name="u" >


    <UserControl.Resources>
        <converter:ColorToBrushConverter x:Key="colorConverter"></converter:ColorToBrushConverter>
        <converter:MultiValueEqualityConverter x:Key="multiConverter"></converter:MultiValueEqualityConverter>

        <!--将数据类作为静态资源，在别窗体作为content时，也能找到数据-->
        <local:SkinViewModel x:Key="skinVm"></local:SkinViewModel>
    </UserControl.Resources>
    <Grid>
        <!--颜色选择部分-->
        <WrapPanel  Margin="10,0,0,0" VerticalAlignment="Top" Orientation="Horizontal">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding Source={StaticResource skinVm},Path=InitCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=WrapPanel, Mode=FindAncestor}}">
                        <!--<i:InvokeCommandAction.CommandParameter>
                            <MultiBinding Converter="{StaticResource multiParam}">
                                <Binding RelativeSource="{RelativeSource AncestorType=WrapPanel, Mode=FindAncestor}"></Binding>
                                <Binding RelativeSource="{RelativeSource AncestorType=Window, Mode=FindAncestor}"></Binding>
                            </MultiBinding>
                        </i:InvokeCommandAction.CommandParameter>-->
                    </i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </WrapPanel>
    </Grid>
</UserControl>
    